package ${package}.${moduleName}.model;


import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import lombok.EqualsAndHashCode;
    #if(${hasBigDecimal})
import java.math.BigDecimal;
#end
import java.util.Date;


/**
* ${className}
* ${comments}
*
* @author $!{author}
* @date $!{datetime}
* @since $!{since}
*/
@Data
@EqualsAndHashCode(callSuper = false)
@TableName("${tableName}")
public class ${className} extends BaseEntity<${className}>
{
    #foreach ($column in $ignoreColumns)
       #if($column.columnName == $pk.columnName)

    /**
     * $column.comments
     */
    @ApiModelProperty("$column.comments")
    @TableId(value = "$column.columnName", type=#if($column.attrType == "String") IdType.UUID #else IdType.AUTO #end )
    private $column.attrType $column.attrname;
        #else


    /**
     * $column.comments
     */
    @ApiModelProperty("$column.comments")
    @TableField("$column.columnName")
    private $column.attrType $column.attrname;
       #end
    #end

    #foreach ($column in $ignoreColumns)
    public static final String $column.columnNameUpperCase ="$column.columnName";
    #end

    @Override
    protected Serializable pkVal(){
    #foreach ($column in $columns)
      #if($column.columnName == $pk.columnName)
      return this.$column.attrname;
      #end
    #end

    }
}
